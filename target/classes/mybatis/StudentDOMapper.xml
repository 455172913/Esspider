<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.StudentDOMapper">
  <resultMap id="BaseResultMap" type="com.domain.StudentDO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="studentName" jdbcType="VARCHAR" property="studentname" />
    <result column="studentNumber" jdbcType="VARCHAR" property="studentnumber" />
    <result column="className" jdbcType="VARCHAR" property="classname" />
    <result column="lessonId" jdbcType="INTEGER" property="lessonid" />
    <result column="lessonName" jdbcType="VARCHAR" property="lessonname" />
    <result column="attendCount" jdbcType="INTEGER" property="attendcount" />
    <result column="usualScore" jdbcType="INTEGER" property="usualscore" />
    <result column="examScore" jdbcType="INTEGER" property="examscore" />
    <result column="finalScore" jdbcType="INTEGER" property="finalscore" />
  </resultMap>
  <sql id="Base_Column_List">
    id, studentName, studentNumber, className, lessonId, lessonName, attendCount, usualScore, 
    examScore, finalScore
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.domain.StudentDO">
    insert into student (id, studentName, studentNumber, 
      className, lessonId, lessonName, 
      attendCount, usualScore, examScore, 
      finalScore)
    values (#{id,jdbcType=INTEGER}, #{studentname,jdbcType=VARCHAR}, #{studentnumber,jdbcType=VARCHAR}, 
      #{classname,jdbcType=VARCHAR}, #{lessonid,jdbcType=INTEGER}, #{lessonname,jdbcType=VARCHAR}, 
      #{attendcount,jdbcType=INTEGER}, #{usualscore,jdbcType=INTEGER}, #{examscore,jdbcType=INTEGER}, 
      #{finalscore,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.domain.StudentDO">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="studentname != null">
        studentName,
      </if>
      <if test="studentnumber != null">
        studentNumber,
      </if>
      <if test="classname != null">
        className,
      </if>
      <if test="lessonid != null">
        lessonId,
      </if>
      <if test="lessonname != null">
        lessonName,
      </if>
      <if test="attendcount != null">
        attendCount,
      </if>
      <if test="usualscore != null">
        usualScore,
      </if>
      <if test="examscore != null">
        examScore,
      </if>
      <if test="finalscore != null">
        finalScore,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentname != null">
        #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="studentnumber != null">
        #{studentnumber,jdbcType=VARCHAR},
      </if>
      <if test="classname != null">
        #{classname,jdbcType=VARCHAR},
      </if>
      <if test="lessonid != null">
        #{lessonid,jdbcType=INTEGER},
      </if>
      <if test="lessonname != null">
        #{lessonname,jdbcType=VARCHAR},
      </if>
      <if test="attendcount != null">
        #{attendcount,jdbcType=INTEGER},
      </if>
      <if test="usualscore != null">
        #{usualscore,jdbcType=INTEGER},
      </if>
      <if test="examscore != null">
        #{examscore,jdbcType=INTEGER},
      </if>
      <if test="finalscore != null">
        #{finalscore,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.domain.StudentDO">
    update student
    <set>
      <if test="studentname != null">
        studentName = #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="studentnumber != null">
        studentNumber = #{studentnumber,jdbcType=VARCHAR},
      </if>
      <if test="classname != null">
        className = #{classname,jdbcType=VARCHAR},
      </if>
      <if test="lessonid != null">
        lessonId = #{lessonid,jdbcType=INTEGER},
      </if>
      <if test="lessonname != null">
        lessonName = #{lessonname,jdbcType=VARCHAR},
      </if>
      <if test="attendcount != null">
        attendCount = #{attendcount,jdbcType=INTEGER},
      </if>
      <if test="usualscore != null">
        usualScore = #{usualscore,jdbcType=INTEGER},
      </if>
      <if test="examscore != null">
        examScore = #{examscore,jdbcType=INTEGER},
      </if>
      <if test="finalscore != null">
        finalScore = #{finalscore,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.domain.StudentDO">
    update student
    set studentName = #{studentname,jdbcType=VARCHAR},
      studentNumber = #{studentnumber,jdbcType=VARCHAR},
      className = #{classname,jdbcType=VARCHAR},
      lessonId = #{lessonid,jdbcType=INTEGER},
      lessonName = #{lessonname,jdbcType=VARCHAR},
      attendCount = #{attendcount,jdbcType=INTEGER},
      usualScore = #{usualscore,jdbcType=INTEGER},
      examScore = #{examscore,jdbcType=INTEGER},
      finalScore = #{finalscore,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>